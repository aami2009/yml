# 
swagger: "2.0"
info:
  description: "This is a sample server producttore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters."
  version: "1.0.0"
  title: "Product API Specification"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
# host: "petstore.swagger.io"
# basePath: "/v2"
tags:
- name: "product"
  description: "Everything about your product"
  externalDocs:
    description: "Find out more"
    url: "http://swagger.io"

paths:
  /product:
    post:
      tags:
      - "product"
      summary: "Create a product"
      description: "Creates a single product with users, description, creation date and any other unique information"
      operationId: "createProduct"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "product object that needs to be added"
        required: true
        schema:
          $ref: "#/definitions/productRequest"
      responses:
        "200":
          description: "successful operation"
          schema:
                $ref: '#/definitions/productResponse'
        "400":
          description: "Bad Request"
          schema:
           type: "object"
           properties:
            error:
             type: "string"
             example: "Product Error"
        "401":
          description: "Unauthorized"
          schema:
           type: "object"
           properties:
            error:
             type: "string"
             example: "User not authenticated"
        "403":
          description: "Forbidden"
          schema:
           type: "object"
           properties:
            error:
             type: "string"
             example: "User does not have permission to access this route"
      security:
      - producttore_auth:
        - "write:product"
        - "read:product"
  /product/updateproduct/{product_Id}:
    put:
      tags:
      - "product"
      summary: "Update a product"
      description: "Updates elements for a product. Can update the release name and/or admins."
      operationId: "update"
      produces:
      - "application/json"
      parameters:
      - name: "product_Id"
        in: "path"
        description: "Id of product that need to updated"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "product object that needs to be updated"
        required: true
        schema:
          $ref: "#/definitions/productRequest"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/productResponse"
        "400":
          description: "Bad Request"
          schema:
           type: "object"
           properties:
            error:
             type: "string"
             example: "Product Error"
        "401":
          description: "Unauthorized"
          schema:
           type: "object"
           properties:
            error:
             type: "string"
             example: "User not authenticated"
        "403":
          description: "Forbidden"
          schema:
           type: "object"
           properties:
            error:
             type: "string"
             example: "User does not have permission to access this route"
      security:
      - api_key: []
  /product/{productId}:
    get:
      tags:
      - "product"
      summary: "Get details for a specific product"
      description: "Returns a single product"
      operationId: "getproductById"
      produces:
      - "application/json"
      parameters:
      - name: "productId"
        in: "path"
        description: "Unique Id for the product requested"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/productResponsePid"
        "400":
          description: "Unauthorized"
          schema:
           type: "object"
           properties:
            error:
             type: "string"
             example: "Product Error"
        "401":
          description: "Bad Request"
          schema:
           type: "object"
           properties:
            error:
             type: "string"
             example: "User not authenticated"
        "403":
          description: "Forbidden"
          schema:
           type: "object"
           properties:
            error:
             type: "string"
             example: "User does not have permission to access this route"
      security:
      - api_key: []
  /product/listofProduct:
    get:
      tags:
      - "product"
      summary: "Get list of product"
      description: "Returns all products current user has read access to"
      operationId: "listOfproduct"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/productResponsePid"
        "400":
          description: "Bad Request"
          schema:
           type: "object"
           properties:
            error:
             type: "string"
             example: "Product Error"
        "401":
          description: "Unauthorized"
          schema:
           type: "object"
           properties:
            error:
             type: "string"
             example: "User not authenticated"
        "403":
          description: "Forbidden"
          schema:
           type: "object"
           properties:
            error:
             type: "string"
             example: "User does not have permission to access this route"
           
          
      security:
      - api_key: []

securityDefinitions:
  producttore_auth:
    type: "oauth2"
    authorizationUrl: "http://producttore.swagger.io/oauth/dialog"
    flow: "implicit"
    scopes:
      write:product: "modify product in your account"
      read:product: "read your product"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
    
definitions:
  productRequest:
    type: "object"
    properties:
      code:
        type: "string"
        example: "B444"
      releaseName:
        type: "string"
        example: "PowerBeats Pro"
      admins:
        type: "array"
        items:
          type: "string"
          example: "12342342, 12342349"
  productResponse:
    type: "object"
    properties:
      Id:
        type: "integer"
        format: "int64"
        example: 12342
      code:
        type: "string"
        example: "B444"
      releaseName:
        type: "string"
        example: "PowerBeats Pro"
      admins:
        type: "array"
        items:
         type: "object"
         properties:
          id:
            type: "integer"
            format: "int64"
            example: 456
          role:
            type: "string"
            example: "ADMIN"
          firstName:
            type: "string"
            example: "John"
          lastName:
            type: "string"
            example: "Smith"
          displayName:
            type: "string"
            example: "Jonny"
          email:
            type: "string"
            example: "jon@apple.com"
    xml:
      name: "product"
  productResponsePid:
    type: "object"
    properties:
      Id:
        type: "integer"
        format: "int64"
        example: 23414
      code:
        type: "string"
        example: "B444"
      releaseName:
        type: "string"
        example: "PowerBeats Pro"
      projects:
        type: "array"
        items:
         type: "object"
         properties:
          id:
            type: "integer"
            format: "int64"
            example: 23423
          type:
            type: "string"
            example: "LINE_EXTENSION"
          code:
            type: "string"
            example: "B444"
          releaseName:
            type: "string"
            example: ""
          assignedUsers:
            type: "array"
            items:
             type: "object"
             properties:
              id:
               type: "integer"
               format: "int64"
               example: 456
              role:
               type: "string"
               example: "ADMIN"
              firstName:
               type: "string"
               example: "John"
              lastName:
               type: "string"
               example: "Smith"
              displayName:
               type: "string"
               example: "Jonny"
              email:
               type: "string"
               example: "jon@apple.com"
          modelNumber:
            type: "string"
            example: "A208"
          status:
            type: "string"
            example: "PENDING"
      admins:
        type: "array"
        items:
         type: "object"
         properties:
          id:
            type: "integer"
            format: "int64"
            example: 456
          role:
            type: "string"
            example: "ADMIN"
          firstName:
            type: "string"
            example: "John"
          lastName:
            type: "string"
            example: "Smith"
          displayName:
            type: "string"
            example: "Jonny"
          email:
            type: "string"
            example: "jon@apple.com"
    xml:
      name: "product"
  
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
# basePath: /backend/product-api_specification/1.0.0
schemes:
 - https
# Added by API Auto Mocking Plugin
# basePath: /backend/product-api_specification/1.0.0
# Added by API Auto Mocking Plugin
# basePath: /backend/product-api_specification/1.0.0
# Added by API Auto Mocking Plugin
# basePath: /ashisbanikjob/product-api_specification/1.0.0
# Added by API Auto Mocking Plugin
basePath: /ashisbanikjob/product-api_specification/1.0.0